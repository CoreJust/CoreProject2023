import core.io.console;
import core.crt.cstdlib;
import core.crt.cstring;
import core.time.timer;

use console;

struct String {
	c8* data;
	u64 capacity;
	u64 size;


	@implicit
	def this(str8 str) {
		this.size = this.capacity = str.size;
		this.data = c8*(cstdlib.malloc(this.size));
		cstring.strncpy(this.data, str.data, str.size);
	}
	
	def public append(str8 str) {
		u64 newSize = this.size + str.size;
		if (newSize > this.capacity) {
			this.data = c8*(cstdlib.realloc(u8*(this.data), newSize));
			this.capacity = newSize;
		}
		
		cstring.strncat(this.data, str.data, str.size);
	}
	
	public static str8 typeName = "String";
}

def main() i32 {
	String str = "Hello ";
	str.append("world from ");
	str.append(String.typeName);
	
	timer.Timer timer = timer.Timer();
	while (true) {
		if (timer.elapsedTimeAsSeconds() > 2.5) {
			console.println(str.data);
			timer.start();
		}
	}
	
	cstdlib.system("pause");
	return 0;
}