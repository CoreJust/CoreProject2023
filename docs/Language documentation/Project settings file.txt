A core project is represented through a project file which is a JSON.
There are some necessary and possible settings.
Necessary settings:
	"name" is the setting that defines the project name. It is used, for example, as a base for some default file names generated by compiler.
	"modules" is the setting that contains an array of paths (relative or absolute) to the files to be compiled.
		In case of a program, it is enough to state a single main file (the one with the function main).
		In case of a library, all the files that must be compiled into object files must be enumerated.
	"output" is an object with several sub-settings, it regulates the compiler's output.
		All subsettings have format "-compilation-stage-": [ "-output-mode-" [, "-file-name-" (in case of "file" output mode) ] ]
		Possible output modes: "no-output", "console", "file".
		Compilation stages: "tokens", "ast", "optimized-ast", "llvm-ir", "optimized-llvm-ir", "object-data", "executable-data"
		In output the necessary ones are object-data and executable-data (in case of a program).
		For library "output" is optional.
		
Unnecessary (but possible) settings:
	"configuration" is the setting that states the configuration, either "debug" or "release".
		Default value is "debug".
	"target-arch" is the settings that states the target platform architecture.
		Default value is the host's architecture, or "x86_64" if host's is undefined. Possible values: "i386", "sparc", "arm", etc.
	"target-vendor" is the setting that states the target's vendor.
		Default value is the host's vendor, or "pc" if host's is undefined. Possible values: "pc", "apple", "nvidia", etc.
	"target-system" is the setting that states the target platform's system.
		Default value is the host's system, or "windows" if host's is undefined. Possible values: "windows", "linux", "cuda", etc.
	"target-abi" is the setting that states the target's abi.
		Default value is the host's abi, or "unknown" if host's is undefined. Possible values: "gnu", "msvc", "android", etc.
	"opt-level" is the setting that states the compiler's optimization level, either 0, 1, 2, or 3.
		Default value is 2.
	"compilation-mode" is the setting that states the way the compiler generates the object files. It is either "program" or "library".
		In case of a program, a single object file and executable file would be generated.
		In case of a library, an object file for each module in "modules" and no executables would be generated.
		Default value is "program".
	"import-paths" is a setting that states the paths where the compiler looks for the imported core modules (apart from relative path).
		It is an array of strings. The path to the default core library shoudl be stated here as well.
	"additional-linked-files" is a setting that enumerates the paths to the files that are to be linked with the project's executable file.